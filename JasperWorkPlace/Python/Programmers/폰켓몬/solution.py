#  왜 코테는 항상 문제가 길까..

# 총 n 마리의 폰켓몬 , n/2 마리 들고 가도 좋음 / 종류에 따라 번호를 붙여 구분 한다.
# 따라서 같은 종류의 폰켓문은 같은 번호를 가짐

#  [3번 1번 2번 3번] 일 경우 2마리 고르는 경우의 수 => (4*3)/2
# 가질수 있는 폰켓몬의 종류의 최댓값은 2마리 (당연)
#  나는 최대한 다양한 폰켓몬을 원한다. 다양한 폰켓몬을 가질수 있고, 종류의 최댓값을 return
#  nums 는 항상 짝수


#  풀이 순서
# 1. nums 의 길이 / 2 하여 가져갈 수 있는 폰켓몬의 수를 고른다. -> a
# 2. 중복되어진 숫자를 제거 한후에 한 배열에다가 저장 (이 배열의 길이 b)
# 3. b가  a 보다 작으면 b 종류의 수를 가질 수 있다.
# 4. 3번의 반대이면 a 개 종류의 수를 가질수 있다.

def solution(nums):
    # 1번 순서
    a = len(nums)/2

    # 2번 순서
    b = len(list(set(nums)))

    # 3번, 4번
    if b >= a:
        return a
    else:
        return b
