# https://www.acmicpc.net/problem/11047

# 문제요약
# 값을 받고 동전 개수의 최솟값을 구하는 것.

# 입력
# 첫째 줄에 N과 K가 주어진다. (1 ≤ N ≤ 10, 1 ≤ K ≤ 100,000,000)
# 둘째 줄부터 N개의 줄에 동전의 가치 Ai가 오름차순으로 주어진다. (1 ≤ Ai ≤ 1,000,000, A1 = 1, i ≥ 2인 경우에 Ai는 Ai-1의 배수)

# 출력
# 첫째 줄에 K원을 만드는데 필요한 동전 개수의 최솟값을 출력한다.

# 예제 입력 1 
# 10 4200
# 1
# 5
# 10
# 50
# 100
# 500
# 1000
# 5000
# 10000
# 50000

# 예제 출력 1 
# 6

#문제풀이

#1. n = 총 종류 / m = m원 / arr[] = 동전의 가치 / c = coin의 갯수
n,m = map(int, input().split())
arr = []
c = 0

#2. 받은 동전의 가치를 arr에 넣어줌
for i in range(n) : 
    arr.append(int(input()))

#3.arr를 내림차순으로 바꿔줌. *가치가 올림차순으로 되어 있으므로 바꿔줘야함!
arr.reverse()    

#4. 반복분사용 / 가치가 큰값부터 나눈 몫으로 코인의 갯수를 올려줌 / m원에서 그만큼 빼줌.
for i in arr :
    c += m//i
    m -= (i * (m//i)) #m= m%i  이런 방법도 있는데 반응이 느리게 나옴..
    
    if m==0 :
        break
        
 #5. 출력       
print(c)