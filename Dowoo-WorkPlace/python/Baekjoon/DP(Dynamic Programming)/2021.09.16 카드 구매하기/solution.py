# https://www.acmicpc.net/problem/11052

# 문제요약
# 들어있는 카드 갯수별 카드금액이 주어지고
# 최대값으로 카드를 사려고함

# 입력
# 첫째 줄에 민규가 구매하려고 하는 카드의 개수 N이 주어진다. (1 ≤ N ≤ 1,000)

# 둘째 줄에는 Pi가 P1부터 PN까지 순서대로 주어진다. (1 ≤ Pi ≤ 10,000)

# 출력
# 첫째 줄에 민규가 카드 N개를 갖기 위해 지불해야 하는 금액의 최댓값을 출력한다.

# 예제 입력 1 
# 4
# 1 5 6 7
# 예제 출력 1 
# 10
# 예제 입력 2 
# 5
# 10 9 8 7 6
# 예제 출력 2 
# 50
# 예제 입력 3 
# 10
# 1 1 2 3 5 8 13 21 34 55
# 예제 출력 3 
# 55
# 예제 입력 4 
# 10
# 5 10 11 12 13 30 35 40 45 47
# 예제 출력 4 
# 50
# 예제 입력 5 
# 4
# 5 2 8 10
# 예제 출력 5 
# 20
# 예제 입력 6 
# 4
# 3 5 15 16
# 예제 출력 6 
# 18

# 문제풀이
import sys

N = int(sys.stdin.readline())
P = [0] + list(map(int, sys.stdin.readline().split())) # 앞에 0을 넣어줘서 1장은 1부터 시작
dp = [0 for _ in range(N+1)]

for i in range(1,N+1) :
    for k in range(1,i+1) :
        dp[i] = max(dp[i],dp[i-k]+P[k]) #dp[4] = dp[0]+P[4], dp[1]+P[3] , dp[2]+P[2] , dp[3]+P[3] 이런식으로 가장 큰수를 찾음

print(dp[N])