# https://www.acmicpc.net/problem/1699

# 문제요약
# 제곱수 합을 최솟값을 구하기  

# 입력
# 첫째 줄에 자연수 N이 주어진다. (1 ≤ N ≤ 100,000)

# 출력
# 주어진 자연수를 제곱수의 합으로 나타낼 때에 그 제곱수 항의 최소 개수를 출력한다.

# 예제 입력 1 
# 7
# 예제 출력 1 
# 4

# 문제풀이
# 어렵다고 느낌, 풀이를 봐도 왜? 이런생각이 들었음
# 겨우 이해함.
# dp의 핵심은 저장한 그 값을 충분히 이용하는 방법!
# 제곱근은 1개이다!
# 이거는 시간이 오래걸림.

import sys

N = int(sys.stdin.readline())
dp = [i for i in range(N+1)] # 여기서 dp[5] = 5는 1을 5번 더하는 방법이 있기때문

for i in range(1,N+1) :
    for j in range(1,i) :
        if j*j > i : # 제곱한 값이 i보다는 작아야함! 크면 패스!
            break

        if dp[i] > dp[i-j*j] + 1 : # 최대값보다는 작아야함 제곱한 값을 사용하여 가장 항의 갯수가 작은것을 찾는것
            dp[i] = dp[i-j*j] + 1
            #  ex) i가 5이고, j가 2일 때 dp[5] = 5 > dp[5- 2*2] + 1 = dp[1] + 1 = 2

print(dp[N])