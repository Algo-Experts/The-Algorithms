# 99번

# 문제
# 미로 상자에 넣은 개미는 먹이를 찾았거나, 더 이상 움직일 수 없을 때까지
# 오른쪽 또는 아래쪽으로만 움직였다.

# 미로 상자의 구조가 0(갈 수 있는 곳), 1(벽 또는 장애물)로 주어지고,
# 먹이가 2로 주어질 때, 성실한 개미의 이동 경로를 예상해보자.

# 단, 맨 아래의 가장 오른쪽에 도착한 경우, 더 이상 움직일 수 없는 경우, 먹이를 찾은 경우에는
# 더이상 이동하지 않고 그 곳에 머무른다고 가정한다.

# 미로 상자의 테두리는 모두 벽으로 되어 있으며,
# 개미집은 반드시 (2, 2)에 존재하기 때문에 개미는 (2, 2)에서 출발한다.

# 입력 예시
# 1 1 1 1 1 1 1 1 1 1
# 1 0 0 1 0 0 0 0 0 1
# 1 0 0 1 1 1 0 0 0 1
# 1 0 0 0 0 0 0 1 0 1
# 1 0 0 0 0 0 0 1 0 1
# 1 0 0 0 0 1 0 1 0 1
# 1 0 0 0 0 1 2 1 0 1
# 1 0 0 0 0 1 0 0 0 1
# 1 0 0 0 0 0 0 0 0 1
# 1 1 1 1 1 1 1 1 1 1


# 출력 예시
# 1 1 1 1 1 1 1 1 1 1
# 1 9 9 1 0 0 0 0 0 1
# 1 0 9 1 1 1 0 0 0 1
# 1 0 9 9 9 9 9 1 0 1
# 1 0 0 0 0 0 9 1 0 1
# 1 0 0 0 0 1 9 1 0 1
# 1 0 0 0 0 1 9 1 0 1
# 1 0 0 0 0 1 0 0 0 1
# 1 0 0 0 0 0 0 0 0 1
# 1 1 1 1 1 1 1 1 1 1




#풀이1 : 0으로 가득채운다 0 = 1개 / 1~10 = 10개 총 11개가 필요함. 
a = [[0 for j in range(12)] for i in range(12)]

#풀이2 : 입력받은 벽과 먹이의 위치를 지정한다. 0번 제외 1부터 입력해야함! 그래서 +1함

for i in range(10) :
    b = input().split()
    for j in range(10) :
        a[i+1][j+1] = int(b[j])

#풀이3 : 2,2에서 시작함 / 오른쪽으로감 /이동경로는 9로 표시됨/ 1이 나올경우 아래로 한칸이동 다시 오른쪽으로감. 2를 만나면 9입력되고 종료.

x = 2
y = 2
while True :
    #가는길이 0이면 9 로 바꿔주고 2를 만나면 거기서 9로 바꾸고 끝!
    if a[y][x] == 0 :
        a[y][x] = 9
    elif a[y][x] == 2 :
        a[y][x] =9
        break
    
    #오른쪽에도 아래에도 1로 되어 있으면 그냥 거기서 멈춤
    if a[y][x+1] == 1 and a[y+1][x] == 1 :
        break  

    # 오른쪽이 1이 아닐경우엔 오른쪽으로 가라! 1일경우엔 아래로 가라!
    if a[y][x+1] != 1 :
        x += 1
    else :
        y += 1

        
#풀이4 : 출력!
for i in range(1,11) : 
    for j in range(1,11) :
        print (a[i][j], end=' ')
    print()  




# 또 다른 방법!

#0으로 된 것을 만들지 않고 바로 값을 받아서 만듬.
a=[]
for i in range(10) : 
    a.append(list(map(int, input().split())))

#단 x와 y값은 꼭 1로 변경해야함!
x=1
y=1   
    













